[tox]
minversion = 1.6
skipsdist = True
envlist = linters
SONARQUBE_SCANNER_VER = 4.7.0.2747

[testenv]
basepython = python3
install_command = pip install {opts} {packages}
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt

[testenv:black]
commands =
  black -v -l160 {toxinidir} --extend-exclude=".*migrations.*\.py"

[testenv:linters]
allowlist_externals =
  bash
commands =
  black -v -l160 --check {toxinidir} --extend-exclude=".*migrations.*\.py"
  flake8 {posargs}
  bash -c 'shellcheck tools/*.sh'

[testenv:unittest]
changedir = aap_billing
commands =
  python3 manage.py test --settings=test_settings --noinput -v 2 tests

[testenv:venv]
commands = {posargs}

[testenv:sonarqube]
changedir = aap_billing
allowlist_externals =
  bash
  unzip
commands =
  coverage run --source='.' manage.py test --settings=test_settings --noinput -v 2 tests
  coverage xml -i -o {toxworkdir}/sonarqube/coverage.xml
  bash -c 'if [ ! -d {toxworkdir}/sonarqube/sonar-scanner-{[tox]SONARQUBE_SCANNER_VER}-linux ]; then {toxinidir}/tools/tox_install_sonarqube.sh {toxworkdir} {[tox]SONARQUBE_SCANNER_VER}; fi'
  bash -c 'cd {toxinidir} && PATH="${env:PATH}:{toxworkdir}/sonarqube/sonar-scanner-{[tox]SONARQUBE_SCANNER_VER}-linux/bin" sonar-scanner -Dsonar.login=***REMOVED***'


[flake8]
show-source = True
# E123, E125 skipped as they are invalid PEP-8.
ignore = E123,E125
max-line-length = 160
exclude =
  .git
  .tox
  aap-billing-venv
  **/migrations/*.py
  **/manage.py
